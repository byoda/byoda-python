{
    "description": "A simple network to maintain contacts",
    "jsonschema": {
        "$id": "https://service.service-4294929430.byoda.net/service/addressbook",
        "$schema": "https://json-schema.org/draft/2020-12/schema#",
        "description": "A simple network to maintain contacts",
        "properties": {
            "member": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read"]
                    }
                },
                "properties": {
                    "joined": {
                        "description": "Date & time when the pod became a member of the service",
                        "format": "date-time",
                        "type": "string"
                    },
                    "member_id": {
                        "#accesscontrol": {
                            "service": {
                                "permissions": ["persist"]
                            },
                            "network": {
                                "permissions": ["persist"]
                            }
                        },
                        "description": "Membership UUID",
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "type": "object",
                "required": ["joined", "member_id"]
            },
            "person": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete"]
                    },
                    "service": {
                        "permissions": ["read"]
                    },
                    "network": {
                        "permissions": [
                            {
                                "permission": "read",
                                "distance": 1,
                                "relation": ["friend", "family"],
                                "source_signature_required": true
                            }
                        ]
                    }
                },
                "properties": {
                    "additional_names": {
                        "description": "Any middle names",
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string"
                    },
                    "email": {
                        "format": "idn-email",
                        "type": "string",
                        "#accesscontrol": {
                            "service": {
                                "permissions": [
                                    {
                                        "permission": "search",
                                        "match": "exact",
                                        "casesensitive": false
                                    }
                                ]
                            }
                        }
                    },
                    "family_name": {
                        "description": "Your surname",
                        "type": "string"
                    },
                    "given_name": {
                        "description": "Your first given name",
                        "type": "string"
                    },
                    "homepage_url": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": ["given_name", "family_name", "email"]
            },
            "network_links": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete", "append"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/network_link"
                }
            },
            "network_invites": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete", "append"]
                    },
                    "any_member": {
                        "permissions": ["append"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/network_invite"
                }
            },
            "network_links_inbound": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete", "append"]
                    },
                    "network": {
                        "permissions": ["append"]
                    },
                    "any_member": {
                        "permissions": ["read"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/network_link_inbound"
                }
            },
            "public_video_thumbnails": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete", "append"]
                    },
                    "anonymous": {
                        "permissions": ["read"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/video_thumbnail"
                }
            },
            "public_video_chapters": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete", "append"]
                    },
                    "anonymous": {
                        "permissions": ["read"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/video_chapter"
                }
            },
            "incoming_claims": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete", "append"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/claim"
                }
            },
            "verified_claims": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete", "append"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/claim"
                }
            },
            "public_claims": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete", "append"]
                    },
                    "anonymous": {
                        "permissions": ["read"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/claim"
                }
            },
            "channels": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete", "append"]
                    },
                    "anonymous": {
                        "permissions": ["read"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/channel"
                }
            },
            "asset_links": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete", "append"]
                    },
                    "network": {
                        "permissions": ["read"]
                    }

                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/asset_link"
                }
            },
            "asset_reactions_received": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete", "append"]
                    },
                    "network": {
                        "permissions": ["append"]
                    }

                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/asset_reaction"
                }
            },
            "datalogs": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "delete", "append"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/datalog"
                }
            },
            "public_assets": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "delete", "append"]
                    },
                    "anonymous": {
                        "permissions": ["read"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/asset"
                }
            },
            "service_assets": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "delete", "append"]
                    },
                    "any_member": {
                        "permissions": ["read"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/asset"
                }
            },
            "app": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "delete", "append"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/app"
                }
            },
            "network_assets": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "delete", "append"]
                    },
                    "network": {
                        "permissions": [
                            {
                                "permission": "read",
                                "distance": 3,
                                "relation": ["friend", "family"],
                                "source_signature_required": true,
                                "anonimized_responses": true
                            }
                        ]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/asset"
                }
            },
            "restricted_content_keys": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "delete", "append"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/restricted_content_key"
                }
            },
            "twitter_medias": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete", "append"]
                    },
                    "any_member": {
                        "permissions": ["read"]
                    },
                    "service": {
                        "permissions": ["read"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/twitter_media"
                }
            },
            "tweets": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "delete", "append"]
                    },
                    "any_member": {
                        "permissions": ["read"]
                    },
                    "service": {
                        "permissions": ["read"]
                    }
                },
                "type": "array",
                "items": {
                    "$ref": "/schemas/tweet"
                }
            }
        },
        "title": "addressbook",
        "type": "object",
        "$defs": {
            "network_link": {
                "$id": "/schemas/network_link",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "description": "links to other members who you have a social connection with, such as friend, colleague, family, etc.",
                "type": "object",
                "properties": {
                    "created_timestamp": {
                        "description": "time the network link was created",
                        "format": "date-time",
                        "type": "string"
                    },
                    "member_id": {
                        "description": "The UUID of the other member",
                        "type": "string",
                        "format": "uuid"
                    },
                    "relation": {
                        "#properties": ["counter"],
                        "description": "What relation you have with the other member",
                        "type": "string"
                    }
                },
                "required": ["created_timestamp", "member_id", "relation"]
            },
            "network_invite": {
                "$id": "/schemas/network_invite",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "description": "An invite to network with another member",
                "type": "object",
                "properties": {
                    "created_timestamp": {
                        "description": "time the network invite was created",
                        "format": "date-time",
                        "type": "string"
                    },
                    "member_id": {
                        "description": "The UUID of the other member",
                        "type": "string",
                        "format": "uuid"
                    },
                    "relation": {
                        "#properties": ["counter"],
                        "description": "The relation the other member claims to have with you",
                        "type": "string"
                    },
                    "text": {
                        "description": "The text of the invitation provded by the other member",
                        "type": "string"
                    }
                },
                "required": ["created_timestamp", "member_id", "relation"]
            },
            "network_link_inbound": {
                "$id": "/schemas/network_inbound",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "description": "The relation another member has with you",
                "type": "object",
                "properties": {
                    "created_timestamp": {
                        "description": "time the network relation was created",
                        "format": "date-time",
                        "type": "string"
                    },
                    "member_id": {
                        "description": "The UUID of the other member",
                        "type": "string",
                        "format": "uuid"
                    },
                    "relation": {
                        "#properties": ["counter"],
                        "description": "The relation the other member has with you",
                        "type": "string"
                    },
                    "signature": {
                        "description": "The text of the invitation provded by the other member",
                        "type": "string"
                    },
                    "signature_expiration": {
                        "description": "The expiration date/time for the certificate used to generate the signature",
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": ["created_timestamp", "member_id", "relation"]
            },
            "app": {
                "$id": "/schemas/app",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "description": "An app approved by the service",
                "type": "object",
                "properties": {
                    "app_id": {
                        "description": "the UUID for the app",
                        "type": "string",
                        "format": "uuid"
                    },
                    "app_type": {
                        "description": "the type of app, ie. 'moderation', 'identity' etc. etc.",
                        "type": "string"
                    },
                    "status": {
                        "description": "the status of the pod for the app, ie. 'active', 'inactive', 'preferred', etc. etc.",
                        "type": "string"
                    },
                    "app_urls": {
                        "type": "array",
                        "items": {
                            "$ref": "/schemas/app_url"
                        },
                        "#reference_field": "app_id"
                    }
                }
            },
            "app_url": {
                "$id": "/schemas/app_url",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "description": "a URL available from an app",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "the functionality provided by the app at this URL",
                        "type": "string"
                    },
                    "url": {
                        "description": "the url for the API",
                        "type": "string",
                        "format": "url"
                    },
                    "app_id": {
                        "description": "the UUID for the app",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "asset_link": {
                "$id": "/schemas/asset_link",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "description": "links to other assets, that you have read, liked, etc.",
                "type": "object",
                "properties": {
                    "created_timestamp": {
                        "description": "time the asset link was created",
                        "format": "date-time",
                        "type": "string"
                    },
                    "member_id": {
                        "description": "The UUID of the member that published the asset",
                        "type": "string",
                        "format": "uuid"
                    },
                    "asset_id": {
                        "#properties": ["counter"],
                        "description": "The UUID of the asset",
                        "type": "string",
                        "format": "uuid"
                    },
                    "asset_url": {
                        "description": "URL to an asset not hosted by a member of the service",
                        "type": "string",
                        "format": "uri"
                    },
                    "relation": {
                        "#properties": ["counter"],
                        "description": "What relation you have with asset, such as read, liked, etc.",
                        "type": "string"
                    },
                    "signature": {
                        "description": "the digital signature using our data cert of the concatenation of member_id, asset_id, asset_url, and relation",
                        "type": "string"
                    }
                },
                "required": ["created_timestamp", "member_id", "relation"]
            },
            "asset_reaction": {
                "$id": "/schemas/asset_reaction",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "description": "Reactions received by the member to assets of the member",
                "type": "object",
                "properties": {
                    "created_timestamp": {
                        "description": "time the reaction was created",
                        "format": "date-time",
                        "type": "string"
                    },
                    "member_id": {
                        "#properties": ["index", "counter"],
                        "description": "The UUID of the member that reacted to our asset",
                        "type": "string",
                        "format":  "uuid"
                    },
                    "asset_id": {
                        "#properties": ["index", "counter"],
                        "description": "The UUID of our asset",
                        "type": "string",
                        "format":  "uuid"
                    },
                    "asset_class": {
                        "#properties": ["index", "counter"],
                        "description": "The UUID of our asset",
                        "type": "string",
                        "format":  "uuid"
                    },
                    "relation": {
                        "#properties": ["index", "counter"],
                        "description": "What relation the other member has with our asset, for example liked",
                        "type": "string"
                    }
                },
                "required": ["created_timestamp", "member_id", "asset_id", "relation"]
            },
            "restricted_content_key": {
                "$id": "/schemas/restricted_content_key",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "description": "keys used to manage access to restricted content",
                "type": "object",
                "properties": {
                    "key_id": {
                        "description": "identifier for the key",
                        "type": "integer"
                    },
                    "key": {
                        "description": "key used to create content tokens",
                        "type": "string"
                    },
                    "not_before": {
                        "description": "time before which the key is not valid",
                        "type": "string",
                        "format": "date-time"
                    },
                    "not_after": {
                        "description": "time after which the key is not valid",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "datalog": {
                "$id": "/schemas/datalog",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "description": "log entries for the membership of the service",
                "type": "object",
                "properties": {
                    "created_timestamp": {
                        "description": "time the log entry was created",
                        "format": "date-time",
                        "type": "string",
                        "#properties": ["index", "counter"]
                    },
                    "remote_addr": {
                        "description": "The remote IP address performing the request",
                        "format": "ipv4",
                        "type": "string",
                        "#properties": ["index", "counter"]
                    },
                    "remote_id": {
                        "description": "The ID of the client originating the log entry",
                        "type": "string",
                        "#properties": ["index", "counter"]
                    },
                    "remote_id_type": {
                        "description": "The type of ID used to authenticate, ie. member, service or account",
                        "type": "string",
                        "#properties": ["index", "counter"]
                    },
                    "origin_member_id": {
                        "description": "The UUID of the member that originated the recurise query",
                        "type": "string",
                        "format": "uuid",
                        "#properties": ["index", "counter"]
                    },
                    "origin_timestamp": {
                        "description": "The time the query was created by the origin member of the recursive query",
                        "format": "date-time",
                        "type": "string"
                    },
                    "query_id": {
                        "description": "Unique identifier for queries so pods can drop duplicate recursive queries",
                        "type": "string",
                        "format": "uuid"
                    },
                    "origin_signature": {
                        "description": "base64 encoded signature of a recursive query",
                        "type": "string"
                    },
                    "signature_format_version": {
                        "description": "The version of the signature format used",
                        "type": "number"
                    },
                    "operation": {
                        "description": "What operation that was requested by the client",
                        "type": "string",
                        "#properties": ["index", "counter"]
                    },
                    "object": {
                        "description": "name of the object in the GraphQL query",
                        "type": "string",
                        "#properties": ["index", "counter"]
                    },
                    "query_filters": {
                        "description": "the filters specified in the GraphQL query",
                        "type": "string"
                    },
                    "query_depth": {
                        "description": "the depth specified the GraphQL query",
                        "type": "integer",
                        "#properties": ["index", "counter"]
                    },
                    "query_relations": {
                        "description": "the relations specified in the GraphQL query",
                        "type": "string",
                        "#properties": ["index", "counter"]
                    },
                    "query_remote_member_id": {
                        "description": "The member that was specified in the append request to proxy to",
                        "type": "string",
                        "format": "uuid",
                        "#properties": ["index", "counter"]
                    },
                    "source": {
                        "description": "The source of the log entry, ie. the client, a graphql query, etc.",
                        "type": "string",
                        "#properties": ["index", "counter"]
                    },
                    "message": {
                        "description": "Additional information about the request",
                        "type": "string"
                    }
                },
                "required": ["created_timestamp", "remote_addr", "operation", "object"]
            },
            "annotation": {
                "$id": "/schemas/annotation",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "type": "object",
                "description": "An annotation for an asset. The 'key' field is optional, in which case the 'value' field acts as a tag",
                "required": ["annotation_id", "asset_id", "value"],
                "properties": {
                    "annotation_id": {
                        "description": "The UUID of the annotation",
                        "type": "string",
                        "format": "uuid",
                        "#properties": ["primary_key", "index", "counter"]
                    },
                    "key": {
                        "description": "The key for the annotation",
                        "type": "string"
                    },
                    "asset_id": {
                        "description": "The ID of the public_asset that this annotation is for",
                        "type": "string",
                        "format": "uuid",
                        "#properties": ["index"]
                    }
                }
            },
            "video_chapter": {
                "$id": "/schemas/video-chapter",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "type": "object",
                "description": "A chapter in a video",
                "required": ["chapter_id", "start", "end", "video_id"],
                "properties": {
                    "chapter_id": {
                        "description": "The UUID of the video chapter",
                        "type": "string",
                        "format": "uuid",
                        "#properties": ["primary_key", "index", "counter"]
                    },
                    "start": {
                        "description": "The start of the chapter, as an offset in seconds from the start of the video",
                        "type": "number"
                    },
                    "end": {
                        "description": "The start of the chapter, as an offset in seconds from the start of the video",
                        "type": "number"
                    },
                    "title": {
                        "description": "The title of the chapter",
                        "type": "string"
                    },
                    "video_id": {
                        "description": "The ID of the public_asset video that this chapter belongs to",
                        "type": "string",
                        "format": "uuid",
                        "#properties": ["index"]
                    }
                }
            },
            "video_thumbnail": {
                "$id": "/schemas/video-chapter",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "type": "object",
                "description": "A chapter in a video",
                "required": ["thumbnail_id", "url", "width", "height", "video_id"],
                "properties": {
                    "thumbnail_id": {
                        "description": "The UUID of the video thumbnail",
                        "type": "string",
                        "format": "uuid",
                        "#properties": ["primary_key", "index", "counter"]
                    },
                    "url": {
                        "description": "The URL of the thumbnail",
                        "type": "string",
                        "format": "uri"
                    },
                    "width": {
                        "description": "The width of the thumbnail",
                        "type": "number"
                    },
                    "height": {
                        "description": "The height of the thumbnail",
                        "type": "number"
                    },
                    "preference": {
                        "description": "The preference of the thumbnail, ie. 'default', 'high', 'medium', 'low'",
                        "type": "string"
                    },
                    "video_id": {
                        "description": "The asset ID of the public_asset video that this chapter belongs to",
                        "type": "string",
                        "format": "uuid",
                        "#properties": ["index"]
                    }
                }
            },
            "claim": {
                "$id": "/schemas/claim",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "type": "object",
                "description": "A claim signed by a party.",
                "required": [
                    "claim_id", "issuer", "issuer_type", "object_type", "keyfield", "keyfield_id",
                    "object_fields", "requester_id", "requester_type",
                    "signature", "signature_timestamp", "signature_format_version",
                    "signature_url", "renewal_url", "confirmation_url",
                    "cert_fingerprint", "cert_expiration"],
                "properties": {
                    "claim_id": {
                        "description": "The UUID of the claim, unique to the signer of the claim",
                        "type": "string",
                        "format": "uuid",
                        "#properties": ["primary_key", "index", "counter"]
                    },
                    "claims": {
                        "description": "The claims that are validated by the issuer",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "issuer": {
                        "description": "The UUID of the claim issuer",
                        "type": "string",
                        "format": "uuid"
                    },
                    "issuer_type": {
                        "description": "what type of entity issued this claim",
                        "type": "string",
                        "enum": ["member", "service", "app", "network"]
                    },
                    "object_type": {
                        "description": "The name of the array storing the object of the claim, ie. 'public_assets' and not 'asset'. The array must store objects that have a data property 'asset_id'",
                        "type": "string"
                    },
                    "keyfield": {
                        "#properties": ["index"],
                        "description": "name of the field used to identify the object, ie. 'asset_id'. The field must be of type 'UUID'",
                        "type": "string"
                    },
                    "keyfield_id": {
                        "#properties": ["index"],
                        "description": "The UUID of the keyfield of the claim",
                        "type": "string",
                        "format": "uuid"
                    },
                    "object_fields": {
                        "description": "The fields covered by the signature of the object with ID 'object_id' stored in the array 'object_type'",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "requester_id": {
                        "description": "The UUID of the entity that requested the claim to be signed by the issuer",
                        "type": "string",
                        "format": "uuid"
                    },
                    "requester_type": {
                        "description": "what type of entity requested this claim to be signed by the issuer",
                        "type": "string",
                        "enum": ["member", "service", "app", "network"]
                    },
                    "signature": {
                        "description": "base64-encoding signature for the values for the 'object_fields' of the object with uuid 'object_id' of type 'object_class'",
                        "type": "string"
                    },
                    "signature_timestamp": {
                        "description": "Date & time for when the signature was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "signature_format_version": {
                        "description": "The version of the signature format used. Each version defines the hashing algorithm and how to format the data to be signed. The formats are defined in byoda-python/byoda/datamodel/claim.py",
                        "type": "string"
                    },
                    "signature_url": {
                        "description": "URL to visit to get additional info about the signature",
                        "type": "string",
                        "format": "uri"
                    },
                    "renewal_url": {
                        "description": "URL to request new signature of the asset",
                        "type": "string",
                        "format": "uri"
                    },
                    "confirmation_url": {
                        "description": "URL of API to call to confirm the signature has not been revoked",
                        "type": "string",
                        "format": "url"
                    },
                    "cert_fingerprint": {
                        "description": "the SHA2-256 fingerprint of the certificate used to sign the claim",
                        "type": "string"
                    },
                    "cert_expiration": {
                        "description": "the timestamp when the cert used to create the signature expires",
                        "type": "string"
                    }
                }
            },
            "asset": {
                "$id": "/schemas/asset",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "description": "an asset like a tweet, a message, a video, etc.",
                "type": "object",
                "properties": {
                    "created_timestamp": {
                        "description": "time the asset was added to the pod",
                        "format": "date-time",
                        "type": "string"
                    },
                    "asset_id": {
                            "description": "The UUID of the asset",
                            "type": "string",
                            "format": "uuid",
                            "#properties": ["primary_key", "index", "counter"]
                    },
                    "asset_type": {
                        "description": "type of asset, ie. a tweet, a message, a video, etc.",
                        "type": "string"
                    },
                    "asset_url": {
                        "description": "type of asset, ie. a tweet, a message, a video, etc.",
                        "type": "string",
                        "format": "uri"
                    },
                    "asset_merkle_root_hash": {
                        "description": "the base64-encoded merkle root hash of the asset. The full hash tree can be downloaded by taking the asset_url and replace the filename in that url with 'merkle-tree.db'",
                        "type": "string"
                    },
                    "public_video_thumbnails": {
                        "description": "list of thumbnails for the asset",
                        "type": "array",
                        "items": {
                            "$ref": "/schemas/video_thumbnail"
                        },
                        "#reference_field": "video_id"
                    },
                    "public_video_chapters": {
                        "description": "list of video chapters for the asset",
                        "type": "array",
                        "items": {
                            "$ref": "/schemas/video_chapter"
                        },
                        "#reference_field": "video_id"
                    },
                    "monetizations": {
                        "description": "enabled monetizations for the asset",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "locale": {
                        "description": "locale for the metadata, ie. en_US",
                        "type": "string"
                    },
                    "creator": {
                        "description": "creator of the asset",
                        "type": "string",
                        "#properties": ["index"]
                    },
                    "published_timestamp": {
                        "description": "date-time of first publication of the content",
                        "type": "string",
                        "format": "date-time"
                    },
                    "content_warnings": {
                        "description": "list of terms with potential triggers, such as violence, or cursing",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "public_claims": {
                        "description": "list of claims for the asset",
                        "type": "array",
                        "items": {
                            "$ref": "/schemas/claim"
                        },
                        "#reference_field": "keyfield_id"
                    },
                    "copyright_years": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "publisher": {
                        "#properties": ["index", "counter"],
                        "description": "the publisher of the asset",
                        "type": "string"
                    },
                    "publisher_asset_id": {
                        "description": "Identifier of the asset set by the publisher",
                        "type": "string",
                        "#properties": ["index"]
                    },
                    "title": {
                        "description": "title of the asset",
                        "type": "string"
                    },
                    "subject": {
                        "description": "a brief description of the asset",
                        "type": "string"
                    },
                    "contents": {
                        "description": "text for the asset",
                        "type": "string"
                    },
                    "keywords": {
                        "description": "comma-separated list of keywords",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "annotations": {
                        "description": "annotations for the asset, things like 'genre:action' or 'city:San Francisco'",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "forum": {
                        "description": "forum, if any, that the asset was posted to",
                        "type": "string"
                    },
                    "channel_id": {
                        "description": "UUID of the channel, if any, that the asset was posted to",
                        "type": "string",
                        "format": "uuid"
                    },
                    "root_asset_id": {
                        "#properties": ["counter", "index"],
                        "description": "ID of asset that is the root of the thread",
                        "type": "string",
                        "format": "uuid"
                    },
                    "root_asset_class": {
                        "description": "top-level class of the root asset in the schema (ie. public_asset)",
                        "type": "string"
                    },
                    "response_to_asset_id": {
                        "#properties": ["counter", "index"],
                        "description": "ID of asset that this asset is a response to",
                        "type": "string",
                        "format": "uuid"
                    },
                    "ingest_status": {
                        "description": "status of the ingest process",
                        "type": "string"
                    },
                    "encoding_profiles": {
                        "description": "DEPRECATED: encoding profile used for the asset",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "chapters": {
                        "description": "DEPRECATED, replaced with public_video_chapters",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "screen_orientation_horizontal": {
                        "description": "Whether content is optimized for consumption on a screen with horizontal orietation",
                        "type": "boolean"
                    }
                },
                "required": ["created_timestamp", "asset_id", "asset_type"]
            },
            "twitter_account": {
                "#accesscontrol": {
                    "member": {
                        "permissions": ["read", "update", "delete"]
                    },
                    "service": {
                        "permissions": ["read"]
                    },
                    "any_member": {
                        "permissions": ["read"]
                    }
                },
                "properties": {
                    "twitter_id": {
                        "description": "Twitter ID for the person",
                        "type": "string"
                    },
                    "created_timestamp": {
                        "description": "Date & time when the Twitter account was created",
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "#accesscontrol": {
                            "service": {
                                "permissions": [
                                    {
                                        "permission": "search",
                                        "match": "exact",
                                        "casesensitive": false
                                    }
                                ]
                            }
                        },
                        "description": "Twitter name of the person",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL for the person",
                        "type": "string",
                        "format": "iri"
                    },
                    "display_url": {
                        "description": "Text to display for the URL for the person",
                        "type": "string"
                    },
                    "pinned_tweet_id": {
                        "description": "ID of the pinned tweet",
                        "type": "string"
                    },
                    "profile_image_url": {
                        "description": "URL for the profile image",
                        "type": "string",
                        "format": "iri"
                    },
                    "followers_count": {
                        "description": "Number of followers",
                        "type": "integer"
                    },
                    "following_count": {
                        "description": "Number of people the person is following",
                        "type": "integer"
                    },
                    "tweet_count": {
                        "description": "Number of tweets",
                        "type": "integer"
                    },
                    "listed_count": {
                        "description": "Number of times the person has been listed",
                        "type": "integer"
                    },
                    "handle": {
                        "#accesscontrol": {
                            "service": {
                                "permissions": [
                                    {
                                        "permission": "search",
                                        "match": "exact",
                                        "casesensitive": true
                                    }
                                ]
                            }
                        },
                        "description": "Twitter handle of the person",
                        "type": "string"
                    },
                    "verified": {
                        "description": "Whether the person is verified",
                        "type": "boolean"
                    },
                    "withheld": {
                        "description": "Twitter User.withheld field",
                        "type": "string"
                    }
                },
                "type": "object",
                "required": ["twitter_id", "name", "username"]
            },
            "twitter_media": {
                "$id": "/schemas/twitter_media",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "description": "a Twitter tweet",
                "type": "object",
                "properties": {
                    "created_timestamp": {
                        "description": "time the asset was added to the pod",
                        "type": "string",
                        "format": "date-time"
                    },
                    "height": {
                        "description": "height of the media",
                        "type": "integer"
                    },
                    "width": {
                        "description": "width of the media",
                        "type": "integer"
                    },
                    "alt_text": {
                        "description": "alernative text for the media if it can't be displayed",
                        "type": "string"
                    },
                    "duration": {
                        "description": "duration of the media",
                        "type": "integer"
                    },
                    "media_key": {
                        "description": "Twitter media key",
                        "type": "string"
                    },
                    "preview_image_url": {
                        "description": "URL of a preview image for the media",
                        "type": "string"
                    },
                    "media_type": {
                        "description": "type of media",
                        "type": "string"
                    },
                    "view_count": {
                        "description": "number of times the media has been viewed",
                        "type": "integer"
                    },
                    "variants": {
                        "description": "list of variants for the media",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "url": {
                        "description": "URL of the media",
                        "type": "string"
                    }
                },
                "required": ["media_key"]
            },
            "channel": {
                "$id": "/schemas/channel",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "description": "a Tube channel, enabling creators to group videos under different channels",
                "type": "object",
                "properties": {
                    "created_timestamp": {
                        "description": "time the asset was created",
                        "format": "date-time",
                        "type": "string"
                    },
                    "channel_id": {
                        "description": "The uuid of the channel",
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "description": "name of the channel",
                        "type": "string"
                    },
                    "description": {
                        "description": "description of the channel",
                        "type": "string"
                    }
                }
            },
            "tweet": {
                "$id": "/schemas/tweet",
                "$schema": "https://json-schema.org/draft/2020-12/schema#",
                "description": "a Twitter tweet",
                "type": "object",
                "properties": {
                    "created_timestamp": {
                        "description": "time the asset was created",
                        "format": "date-time",
                        "type": "string"
                    },
                    "asset_id": {
                        "description": "The Twitter ID of the asset",
                        "type": "string"
                    },
                    "lang": {
                        "description": "language the contents of the tweet is in",
                        "type": "string"
                    },
                    "creator": {
                        "description": "creator of the asset",
                        "type": "string"
                    },
                    "contents": {
                        "description": "text for the asset",
                        "type": "string"
                    },
                    "response_to": {
                        "description": "Twitter ID of person who created the tweet this is a response to",
                        "type": "string"
                    },
                    "conversation_id": {
                        "description": "ID of the conversation this asset is part of",
                        "type": "string"
                    },
                    "geo": {
                        "description": "geographic location of the tweet",
                        "type": "string"
                    },
                    "retweet_count": {
                        "description": "number of times the tweet has been retweeted",
                        "type": "integer"
                    },
                    "reply_count": {
                        "description": "number of times the tweet has been replied to",
                        "type": "integer"
                    },
                    "like_count": {
                        "description": "number of times the tweet has been liked",
                        "type": "integer"
                    },
                    "quote_count": {
                        "description": "number of times the tweet has been quoted",
                        "type": "integer"
                    },
                    "mentions": {
                        "description": "list of Twitter IDs of people mentioned in the tweet",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "urls": {
                        "description": "list of URLs in the tweet",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "references": {
                        "description": "list of Twitter IDs of people who quoted or replied to the tweet",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "media_ids": {
                        "description": "list of media uuids for attachments in the tweet",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hashtags": {
                        "description": "list of hashtags in the tweet",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assets": {
                        "description": "list of assets in the tweet",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": ["created_timestamp", "asset_id", "contents"]
            }
        }
    },
    "name": "byoda-tube",
    "owner": "Steven Hessing",
    "service_id": 4294929430,
    "signatures": {},
    "supportemail": "steven@byoda.org",
    "version": 1,
    "website": "https://byoda.tube/",
    "cors_origins": [
        "www.byoda.net",
        "addressbook.byoda.org",
        "byoda.tube",
        "www.byoda.tube"
    ]
}