server {
{% if subdomain == 'accounts' and not shared_webserver %}
    listen       443 ssl http2 backlog=16384 fastopen=4096 deferred reuseport default_server;
{% else %}
    listen       443 ssl http2;
{% endif %}

{% if subdomain == 'accounts' and custom_domain %}
    server_name  {{ identifier }}.{{ subdomain }}.{{ network }} {{ custom_domain }};

    ssl_certificate_key {{ '/etc/letsencrypt/live/' + custom_domain + '/privkey.pem' }};
    ssl_certificate {{ '/etc/letsencrypt/live/' + custom_domain + '/fullchain.pem' }};
{% else %}
    server_name  {{ identifier }}.{{ subdomain }}.{{ network }};

    # byoda.util.secrets.Secret.save_tmp_private_key() writes unencrypted private key to /tmp
    ssl_certificate_key {{ key_filepath }};
    ssl_certificate {{ cert_filepath }};
{% endif %}

    # http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client
    ssl_verify_client off;

{% if subdomain == 'accounts' %}
    location / {
        root   /var/www/wwwroot/;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
    }

    location /logs {
        root   /var/www/wwwroot/;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        auth_basic  "Log Area";
        # Location of auth file defined in byoda-python:/podserver/bootstrap/nginxconfig.py
        auth_basic_user_file /etc/nginx/htaccess.db;
    }


    location /logs/ {
        auth_basic  "Log Area";
        # Location of auth file defined in byoda-python:/podserver/bootstrap/nginxconfig.py
        auth_basic_user_file /etc/nginx/htaccess.db;

        types {
            text/plain    log;
        }
    }

    location /docs {
        set $cors "0";
        satisfy any;
        proxy_pass http://127.0.0.1:{{ port }};
    }

    location /redoc {
        set $cors "0";
        proxy_pass http://127.0.0.1:{{ port }};
    }

    location /openapi.json {
        set $cors "0";
        proxy_pass http://127.0.0.1:{{ port }};
    }
{% else %}
    location = /member-cert.pem {
        alias {{ root_dir }}/network-{{ network }}/account-pod/service-{{ service_id }}/network-{{ network }}-member-{{ service_id }}-cert.pem;
    }

    location = /member-data-cert.pem {
        alias {{ root_dir }}/network-{{ network }}/account-pod/service-{{ service_id }}/network-{{ network }}-member-{{ service_id }}-data-cert.pem;
    }

    location /ws-api/ {
        proxy_pass http://127.0.0.1:8000/api/;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;

        proxy_read_timeout 3660;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header X-Client-SSL-Issuing-CA $ssl_client_i_dn;
        proxy_set_header X-Client-SSL-Subject $ssl_client_s_dn;
        proxy_set_header X-Client-SSL-Verify $ssl_client_verify;
        proxy_set_header X-Client-SSL-Cert $ssl_client_escaped_cert;
    }

{% endif %}

    location /api/ {
        proxy_pass http://127.0.0.1:{{ port }};

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header X-Client-SSL-Issuing-CA $ssl_client_i_dn;
        proxy_set_header X-Client-SSL-Subject $ssl_client_s_dn;
        proxy_set_header X-Client-SSL-Verify $ssl_client_verify;
        proxy_set_header X-Client-SSL-Cert $ssl_client_escaped_cert;
    }

    location /public/ {
{% if cloud == 'LOCAL' %}
        root {{ root_dir }};
{% else %}
        proxy_pass {{ public_cloud_endpoint }};
        proxy_cache byoda;

        # https://nginx.org/en/docs/http/ngx_http_slice_module.html
        slice 1m;
        proxy_cache_key   $uri$is_args$args$slice_range;
        proxy_set_header  Range $slice_range;

        # Avoid object storage thinking we want authenticated access
        proxy_set_header Authorization '';

{% endif %}


{% if cloud == 'Azure' %}
        proxy_set_header x-ms-version 2021-12-02;
        proxy_set_header Host {{ public_bucket}};
        proxy_hide_header x-ms-request-id;
        proxy_hide_header x-ms-version;
        proxy_hide_header x-ms-creation-time;
        proxy_hide_header x-ms-blob-content-md5;
        proxy_hide_header x-ms-lease-status;
        proxy_hide_header x-ms-lease-state;
        proxy_hide_header x-ms-blob-type;
        proxy_hide_header x-ms-server-encrypted;
{% elif cloud == 'GCP' %}
        proxy_set_header Host storage.googleapis.com;
        proxy_hide_header alt-svc;
        proxy_hide_header X-GUploader-UploadID;
        proxy_hide_header alternate-protocol;
        proxy_hide_header x-goog-hash;
        proxy_hide_header x-goog-generation;
        proxy_hide_header x-goog-metageneration;
        proxy_hide_header x-goog-stored-content-encoding;
        proxy_hide_header x-goog-stored-content-length;
        proxy_hide_header x-goog-storage-class;
        proxy_hide_header x-xss-protection;
        # proxy_hide_header accept-ranges;
        proxy_hide_header Set-Cookie;
        proxy_ignore_headers Set-Cookie;
{% elif cloud == 'AWS' %}
{% endif %}

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-AuthorizationKeyId';
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-AuthorizationKeyId' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Content-Type,Authorization,X-AuthorizationKeyId' always;
        }
        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-AuthorizationKeyId' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Content-Type,Authorization,X-AuthorizationKeyId' always;
        }
    }

    location /restricted/ {
{% if cloud == 'LOCAL' %}
        root {{ root_dir }};
{% else %}
        proxy_pass {{ restricted_cloud_endpoint }};
        proxy_cache byoda;

        # https://nginx.org/en/docs/http/ngx_http_slice_module.html
        slice 1m;
        proxy_cache_key   $uri$is_args$args$slice_range;
        proxy_set_header  Range $slice_range;

        # Avoid object storage thinking we want authenticated access
        proxy_set_header Authorization '';
        proxy_set_header X-AuthorizationKeyId '';

{% endif %}
        # Disable auth on content_token for now
        # auth_request /api/v1/pod/content/asset;
        set $original_url $uri;
        set $original_args $args;

{% if cloud == 'Azure' %}
        proxy_set_header x-ms-version 2021-12-02;
        proxy_set_header Host {{ restricted_bucket }};
        proxy_hide_header x-ms-request-id;
        proxy_hide_header x-ms-version;
        proxy_hide_header x-ms-creation-time;
        proxy_hide_header x-ms-blob-content-md5;
        proxy_hide_header x-ms-lease-status;
        proxy_hide_header x-ms-lease-state;
        proxy_hide_header x-ms-blob-type;
        proxy_hide_header x-ms-server-encrypted;
{% elif cloud == 'GCP' %}
        proxy_set_header Host storage.googleapis.com;
        proxy_hide_header alt-svc;
        proxy_hide_header X-GUploader-UploadID;
        proxy_hide_header alternate-protocol;
        proxy_hide_header x-goog-hash;
        proxy_hide_header x-goog-generation;
        proxy_hide_header x-goog-metageneration;
        proxy_hide_header x-goog-stored-content-encoding;
        proxy_hide_header x-goog-stored-content-length;
        proxy_hide_header x-goog-storage-class;
        proxy_hide_header x-xss-protection;
        # proxy_hide_header accept-ranges;
        proxy_hide_header Set-Cookie;
        proxy_ignore_headers Set-Cookie;
{% elif cloud == 'AWS' %}
{% endif %}

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-AuthorizationKeyId';
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Rang,Authorization,X-AuthorizationKeyId' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Content-Type,Authorization,X-AuthorizationKeyId' always;
        }
        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-AuthorizationKeyId' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,Content-Type,Authorization,X-AuthorizationKeyId' always;
        }
    }

    location /api/v1/pod/content/asset {
        internal;
        proxy_set_header Original-URL $original_url;
        proxy_pass http://127.0.0.1:8000/api/v1/pod/content/asset?$original_args;
    }

}


# Server listens on port 444 for traffic coming from other pods. These
# connections will use M-TLS authentication

server {
{% if subdomain == 'accounts' and not shared_webserver %}
    listen       444 ssl http2 backlog=16384 fastopen=4096 deferred reuseport default_server;
{% else %}
    listen       444 ssl http2;
{% endif %}

    server_name  {{ identifier }}.{{ subdomain }}.{{ network }};

    # byoda.util.secrets.Secret.save_tmp_private_key() writes unencrypted private key to /tmp
    ssl_certificate_key {{ key_filepath }};
    ssl_certificate {{ cert_filepath }};

    # http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_verify_client
    ssl_verify_client on;

    ssl_verify_depth 5;

{% if subdomain == 'accounts' %}
    # http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_client_certificate
    ssl_client_certificate {{ root_dir }}/network-{{ network }}/network-{{ network }}-root-ca-cert.pem;

    # http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_trusted_certificate
    # ssl_trusted_certificate {{ root_dir }}/network-{{ network }}/network-{{ network }}-root-ca-cert.pem;
{% else %}
    # http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_client_certificate
    ssl_client_certificate {{ root_dir }}/network-{{ network }}/services/service-{{ service_id }}/network-{{ network }}-service-{{ service_id }}-ca-certchain.pem;

    # http://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_trusted_certificate
    # ssl_trusted_certificate {{ root_dir }}/network-{{ network }}/services/service-{{ service_id }}/network-{{ network }}-service-{{ service_id }}-ca-cert.pem;
{% endif %}

    location = /member-cert.pem {
        alias {{ root_dir }}/network-{{ network }}/account-pod/service-{{ service_id }}/network-{{ network }}-member-{{ service_id }}-cert.pem;
    }

    location = /member-data-cert.pem {
        alias {{ root_dir }}/network-{{ network }}/account-pod/service-{{ service_id }}/network-{{ network }}-member-{{ service_id }}-data-cert.pem;
    }

    location /api/ {
        proxy_pass http://127.0.0.1:{{ port }};

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header X-Client-SSL-Issuing-CA $ssl_client_i_dn;
        proxy_set_header X-Client-SSL-Subject $ssl_client_s_dn;
        proxy_set_header X-Client-SSL-Verify $ssl_client_verify;
        proxy_set_header X-Client-SSL-Cert $ssl_client_escaped_cert;
    }
}
